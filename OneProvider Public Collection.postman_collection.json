{
	"info": {
		"_postman_id": "eab934df-4563-41a2-b1b2-38543ba3c9eb",
		"name": "OneProvider Public Collection",
		"description": "#### Welcome to OneProvider's public API!\n\nMake sure your API keys are entered in the 'Variables' section to start making API calls!\n\n###### For more information, see our [official documentation](https://panel.op-net.com/api).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23236759",
		"_collection_link": "https://www.postman.com/op-net/workspace/oneprovider/collection/6418442-eab934df-4563-41a2-b1b2-38543ba3c9eb?action=share&source=collection_link&creator=23236759"
	},
	"item": [
		{
			"name": "/SERVER",
			"item": [
				{
					"name": "/server/list",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"url": {
							"raw": "{{API_URL}}/server/list",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"list"
							]
						},
						"description": "Returns a list of all servers and VMs."
					},
					"response": [
						{
							"name": "/server/list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"url": {
									"raw": "{{API_URL}}/server/list",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"list"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",  \n    \"response\": {  \n        \"servers\": [  \n            {  \n                \"server_id\": \"00000\",  \n                \"ip_addr\": \"123.123.123.123\",  \n                \"hostname\": \"hostname.example.com\",  \n                \"status\": \"Active\",  \n                \"username\": \"root/oneprovider\",  \n                \"location\": \"Paris - FR\",  \n                \"next_due_date\": \"0000/00/00\",  \n                \"billing_cycle\": \"Monthly\",  \n                \"recurring_amount\": \"0.00\",  \n                \"cancel_reason\": \"null\",  \n                \"cancel_type\": \"null\",  \n                \"manager_type\": \"OneProvider-1\",  \n                \"ips\": \"124.124.124.124\"  \n            },  \n        ]  \n    }  \n}  "
						}
					]
				},
				{
					"name": "/server/info/{{server_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/server/info/{{server_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"info",
								"{{server_id}}"
							]
						},
						"description": "Return a server's information."
					},
					"response": [
						{
							"name": "/server/info/{{server_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/server/info/{{server_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"info",
										"{{server_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",  \n    \"response\": {  \n        \"server_id\": \"0000\",  \n        \"ip_addr\": \"123.123.123.123\",  \n        \"hostname\": \"hostname.example.com\",  \n        \"status\": \"Active\",  \n        \"username\": \"root/oneprovider\",  \n        \"root_password\": \"1q2w3e4r5t\",  \n        \"bandwidth\": \"2000 Gb / 10 Mbps\",  \n        \"hdd\": \"2x 500GB\",  \n        \"ram\": \"4GB\",  \n        \"cpu\": \"Intel Xeon E3-1230 3.20 GHz\",  \n        \"max_ip\": \"2\",  \n        \"os\": \"Centos 6.4 64BITS\",  \n        \"next_due_date\": \"0000/00/00\",  \n        \"billing_cycle\": \"Monthly\",  \n        \"recurring_amount\": 0.00,  \n        \"location\": \"Paris, FR\",  \n        \"cancel_reason\": \"null\",  \n        \"cancel_type\": \"null\",  \n        \"manager_type\": \"OneProvider-1\",  \n        \"ips\": \"124.124.124.124\"  \n    }  \n}  "
						}
					]
				},
				{
					"name": "/server/manage/{{server_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/server/manage/{{server_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"manage",
								"{{server_id}}"
							]
						},
						"description": "Return a list of the methods available to manage a specific server."
					},
					"response": [
						{
							"name": "/server/manage/{{server_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/server/manage/{{server_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"manage",
										"{{server_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",  \n    \"response\": [  \n        {  \n            \"action\": \"method name\",  \n            \"return\": {  \n                \"result\": \"success\",\n                \"description\": \"The description of the method.\",\n                \"params\": {\n                    \"0\": {\n                        \"name\": \"The name of the parameter.\",\n                        \"type\": \"the type of the parameter\",\n                        \"description\": \"The description of the parameter\"\n                    }\n                },\n                \"response\": {  \n                    \"message\": \"The Return format of the call\"\n                }  \n            }  \n        }\n    ]  \n}  "
						}
					]
				},
				{
					"name": "/server/action",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "server_id",
									"value": "",
									"description": "The ID of the server",
									"type": "text"
								},
								{
									"key": "action",
									"value": "",
									"description": "The method name specified in the list obtained with the /server/manage/ call.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/server/action/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"action",
								""
							]
						},
						"description": "Send a command to a server using the method list obtained with the /server/manage/ call."
					},
					"response": [
						{
							"name": "/server/action",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "server_id",
											"value": "{{server_id}}",
											"description": "The ID of the server",
											"type": "text"
										},
										{
											"key": "action",
											"value": "reboot",
											"description": "The method name specified in the list obtained with the /server/manage/ call.",
											"type": "text"
										},
										{
											"key": "software",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "newPassword",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "customHostname",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "software",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "ip",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "rdns",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "hours",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "bootId",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "rescueMail",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "rootDevice",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "ip",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "reverse",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "start",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "end",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "hostingAddonId",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "ddos_protectiond",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "date",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "hostname",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "scale",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/server/action/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"action",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",  \n    \"response\": {  \n        \"message\": \"Success message of the method.\",  \n        \"other\": \"Any and all others return values of the specified action.\"\n    }  \n}  "
						}
					]
				},
				{
					"name": "/server/cancel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "server_id",
									"value": "{{server_id}}",
									"description": "The ID of the server",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "",
									"description": "The reason of the cancellation",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "The cancellation type [Immediate | End of Billing Period]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/server/cancel",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"cancel"
							]
						},
						"description": "Request a cancellation on a server or a VM."
					},
					"response": [
						{
							"name": "/server/cancel",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "server_id",
											"value": "{{server_id}}",
											"description": "The ID of the server",
											"type": "text"
										},
										{
											"key": "reason",
											"value": "This is a test",
											"description": "The reason of the cancellation",
											"type": "text"
										},
										{
											"key": "type",
											"value": "End of Billing Period",
											"description": "The cancellation type [Immediate | End of Billing Period]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/server/cancel",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"cancel"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",  \n    \"response\": {  \n        \"message\": \"You have successfully requested a cancellation on your server.\"  \n    }  \n}  "
						}
					]
				},
				{
					"name": "/server/remove/cancellation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "server_id",
									"value": "{{server_id}}",
									"description": "The ID of the server",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/server/remove/cancellation/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"remove",
								"cancellation",
								""
							]
						},
						"description": "Remove an existing cancellation request on a server or a VM."
					},
					"response": [
						{
							"name": "/server/remove/cancellation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "server_id",
											"value": "{{server_id}}",
											"description": "The ID of the server",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/server/remove/cancellation/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"remove",
										"cancellation",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"You have successfully removed the cancellation request on your server.\"\n    }\n}"
						}
					]
				},
				{
					"name": "/server/hostname",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "server_id",
									"value": "{{server_id}}",
									"description": "The ID of the server",
									"type": "text"
								},
								{
									"key": "hostname",
									"value": "",
									"description": "The new hostname of the server",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/server/hostname/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"server",
								"hostname",
								""
							]
						},
						"description": "Change a server's hostname."
					},
					"response": [
						{
							"name": "/server/hostname",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "server_id",
											"value": "{{server_id}}",
											"description": "The ID of the server",
											"type": "text"
										},
										{
											"key": "hostname",
											"value": "test.com",
											"description": "The new hostname of the server",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/server/hostname/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"server",
										"hostname",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",  \n    \"response\": {  \n        \"status\": \"OK\"  \n    }  \n} "
						}
					]
				}
			],
			"description": "The /server section of the API allows its user to programmatically do what the client panel server manager does.\n\nFor exemple it can be used to automatically iterate througt all of a user server and execute the reboot action on each one that allow it.\n\n**Warning:**\n\n- Not all server have the same action available to them, use the /server/manage/{{server_id}} method to see all the available action for the server.\n    \n- The parameters and return format of the /server/action method is different depending on the action requested."
		},
		{
			"name": "/VM",
			"item": [
				{
					"name": "/vm/project/list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/project/list",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"project",
								"list"
							]
						},
						"description": "Returns a list of all you OneCloud projects."
					},
					"response": [
						{
							"name": "/vm/project/list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/project/list",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"project",
										"list"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",\n    \"response\": {\n        \"projects\": [\n            {\n              \"uuid\": \"000-000\",\n              \"name\": \"Main project\",\n              \"isDefault\": 0,\n              \"instances\": 1\n            }, {\n              \"uuid\": \"00a00a0a-a0aa-00aa-0000-00aaa000a0a0a\",\n              \"name\": \"My-Project\",\n              \"isDefault\": 1,\n              \"instances\": 4\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/listing/{{project_uuid}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/vm/listing/{{project_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"listing",
								"{{project_id}}"
							]
						},
						"description": "Get a list of your virtual servers."
					},
					"response": [
						{
							"name": "/vm/listing/{{project_uuid}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/vm/listing/{{project_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"listing",
										"{{project_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",\n    \"response\": {\n      \"project_uuid\": \"00a00a0a-a0aa-00aa-0000-00aaa000a0a0a\",\n      \"instances\": [\n        {\n            \"id\": \"000000\",\n            \"ip\": \"123.123.123.123\",\n            \"hostname\": \"hostname.example.com\",\n            \"billing_status\": \"Active\",\n            \"hourly_price\": \"0.00550000000\",\n            \"memory\": \"512\",\n            \"storage\": \"20\",\n            \"additional_storage\": \"0\",\n            \"cores\": \"1\",\n            \"bandwidth_limit\": \"750\",\n            \"cycle_cost\": \"4.20\",\n            \"operating_system\": \"CentOS 6.5 x86_64\",\n            \"location\": \"Amsterdam - NL\",\n            \"location_id\": \"32\"\n        }\n      ]\n    }\n}  "
						}
					]
				},
				{
					"name": "/vm/list (Deprecated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/list/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"list",
								""
							]
						},
						"description": "Get a list of your virtual servers."
					},
					"response": [
						{
							"name": "/vm/list (Deprecated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/list/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"list",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{  \n    \"result\": \"success\",\n    \"response\": {\n        \"instances\": [\n            {\n                \"id\": \"000000\",\n                \"dedicatedip\": \"123.123.123.123\",\n                \"domain\": \"hostname.example.com\",\n                \"domainstatus\": \"Active\",\n                \"hourlyPrice\": \"0.00550000000\",\n                \"memory\": \"512\",\n                \"storage\": \"20\",\n                \"additionalStorage\": \"0\",\n                \"cores\": \"1\",\n                \"bandwidth\": \"750\",\n                \"charges\": \"null\",\n                \"operatingSystem\": \"CentOS 6.5 x86_64\",\n                \"location\": \"Amsterdam - NL\",\n                \"location_id\": \"32\"\n            }\n        ],\n        \"vps_desc\": \"Legacy OneCloud v2\",\n        \"vps\": [\n            {\n                \"id\": \"00000\",\n                \"os\": \"CentOS 6.5 x86_64\",\n                \"plan\": \"Plan 02\",\n                \"disk\": \"30GB SSD\",\n                \"memory\": \"1GB\",\n                \"location\": \"Paris - FR\",\n                \"location_id\": \"34\",\n                \"ip\": \"123.123.123.123\",\n                \"hostname\": \"hostname.example.com\",\n                \"status\": \"Active\",\n                \"invoice\": \"0\",\n                \"upgrade\": \"\",\n                \"nextduedate\": \"2018-11-01\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/info/{{vm_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/info/{{vm_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"info",
								"{{vm_id}}"
							]
						},
						"description": "Get a virtual server's information: status, available templates and iso images."
					},
					"response": [
						{
							"name": "/vm/info/{{vm_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/info/{{vm_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"info",
										"{{vm_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "// When the VM is installing:\n{\n    \"result\": \"success\",\n    \"response\": { // The following keys are added to the response only when the VM is installing.\n        \"is_installing\": 1,\n        \"progress\": \"2\",  // Percentage (Currently: 2%),\n        \"message\": \"Your virtual server is currently installing\"\n    }\n}\n//\n{\n    \"result\": \"success\",\n    \"response\": {\n        \"server_info\": {\n            \"status\": \"success\",\n            \"ipaddress\": \"123.123.123.123\",\n            \"hostname\": \"hostname.example.com\",\n            \"template\": \"linux-centos-6.5-x86_64-min-gen2-v1\",\n            \"memory\": \"549755813888\",\n            \"space_gb\": \"20\",\n            \"ram_mb\": \"512\",\n            \"bandwidth_gb\": \"750\",\n            \"cpus\": \"1\",\n            \"country\": \"FR\",\n            \"city\": \"Paris\",\n            \"plan\": \"01d20c1\",\n            \"rootpassword\": \"dyx6M8kbZUg6enmqxJRI\"\n            \"is_legacy\" : \"false\"\n        },\n        \"server_state\": {\n            \"status\": \"success\",\n            \"state\": \"online\",\n            \"mainipaddress\": \"123.123.123.123\",\n            \"ipaddresses\": \"123.123.123.123\",\n            \"bandwidth\": \"2199023255552,112133881,2198911121671,0\",\n            \"bandwidth_used_gb\": \"0.47\",\n            \"available_bandwidth_gb\": \"749.53\",\n            \"bandwidth_used_percentage\": \"0.06\"\n            \"rescuemode\": \"0\",\n            \"pae\": \"1\",\n            \"bootorder\": \"cda\",\n            \"iso\": \"\",\n            \"band_suspend\": \"0\"\n        },\n        \"ips\": [\n            {\n                \"ip\": \"123.123.123.123\",\n                \"type\": \"ipv4\",\n                \"gateway\": \"123.123.123.254\",\n                \"netmask\": \"255.255.255.255\",\n                \"primary\": \"1\",\n                \"mac_address\": \"00:00:00:00:00:00\"\n            },\n        ],\n        \"iso_images\": [\n            \"CentOS-7-x86_64-Minimal-1804.iso\"\n        ],\n        \"log\": [\n            {\n                \"log\": \"[Reinstall] - Virtual server: 12345 - App: Drupal on ubuntu 14.04 64bits \",\n                \"time\": \"2042-04-02 16:20:42\"\n            },\n        ],\n        \"server_billing\": {\n            \"reg_date\": \"2042-04-20\",\n            \"next_due_date\": \"Non applicable\",\n            \"payment_method\": \"Credit card\",\n            \"first_payment_amount\": \"Non applicable\",\n            \"recurring_amount\": \"0.001\",\n            \"billing_cycle\": \"Hourly\",\n            \"status\": \"Active\"\n        },\n        \"addons\": [\n            \"available\": [\n                {\n                    \"name\": \"ipv6\",\n                    \"monthly_price\": \"0.00\",\n                    \"description\": \"Additional IPv6\",\n                    \"can_order\": \"1\",\n                    \"active_count\": \"0\",\n                    \"max_quantity\": \"1\"\n                },\n            ],\n            \"active\": [\n                {\n                  \"id\": \"ip-0.0.0.0\",\n                  \"name\": \"Additional IPv4\",\n                  \"type\": \"ipv4\" // Type: \"ipv4\", \"ipv6\", \"storage\"\n                },\n            ]\n        ],\n        \"server_install\": \"false\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/templates/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"templates",
								""
							]
						},
						"description": "Returns a list of the available OS."
					},
					"response": [
						{
							"name": "/vm/templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/templates/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"templates",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": [\n        {\n        \"id\": \"812\",\n        \"name\": \"Ubuntu 18.04 64bits\",\n        \"size\": \"1732247552\", // In bytes\n        \"display\": {\n            \"name\": \"ubuntu\",\n            \"display\": \"Ubuntu 18.04 64bits\",\n            \"description\": \"\",\n            \"oca\": \"0\" // Is Oneclick app\n        }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/vm/locations",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/locations/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"locations",
								""
							]
						},
						"description": "Get a list of the available locations."
					},
					"response": [
						{
							"name": "/vm/locations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/locations/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"locations",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"Europe\": [\n            {\n                \"id\": \"1\",\n                \"region\": \"Europe\",\n                \"country\": \"FR\",\n                \"city\": \"Paris\",\n                \"available_types\": {\n                    \"0\": \"General Purpose\",\n                    \"1\": \"Storage\"\n                },\n                \"available_sizes\": {\n                    \"0\": \"44\",\n                    \"1\": \"45\"\n                },\n                \"available_ips\": {\n                \"ipv4\": \"1\",\n                \"ipv6\": \"0\"\n                }\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/sshkeys/list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/sshkeys/list",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"sshkeys",
								"list"
							]
						},
						"description": "Returns a list of SSH keys."
					},
					"response": [
						{
							"name": "/vm/sshkeys/list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/sshkeys/list",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"sshkeys",
										"list"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"keys\": [\n            {\n                \"uuid\": \"F0urTw5nTy\",\n                \"name\": \"My SSH Key\",\n                \"value\": \"ssh-rsa AAA111...ZZZ999 example@hostname\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/images/list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/images/list",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"images",
								"list"
							]
						},
						"description": "Returns a list of your instances' images."
					},
					"response": [
						{
							"name": "/vm/images/list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/images/list",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"images",
										"list"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"suspendedBackupsCount\": 0,\n        \"images\": [\n            {\n                \"id\": \"420_my-very-own-instance_2042_12_24-12_24_42\",\n                \"name\": \"My custom image name\",\n                \"size\": 30,\n                \"date\": \"2042-12-24 12:24:42\",\n                \"pending\": false,\n                \"suspended\": 0,\n                \"additionalStorages\": [\n                    \"30.000\",\n                    \"30.000\",\n                    \"30.000\"\n                ],\n                \"ongoingRestoreTasks\": \"0\",\n                \"os\": {\n                    \"name\": \"almalinux\",\n                    \"display\": \"AlmaLinux 8.6 64bits\"\n                }\n            },\n            {\n                \"id\": \"240_my-second-instance_2042_12_24-12_42_24\",\n                \"name\": \"My new image\",\n                \"size\": 20,\n                \"date\": \"2042-12-24 12:42:24\",\n                \"pending\": false,\n                \"suspended\": 0,\n                \"additionalStorages\": [],\n                \"ongoingRestoreTasks\": \"1\",\n                \"os\": {\n                    \"name\": \"fedora\",\n                    \"display\": \"Fedora 34 64bits\"\n                }\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/sizes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/vm/sizes/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"sizes",
								""
							]
						},
						"description": "Get a list of available plan sizes."
					},
					"response": [
						{
							"name": "/vm/sizes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/vm/sizes/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"sizes",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"instance_sizes\": [\n            {\n                \"id\": \"44\",\n                \"name\": \"01d20c1\",\n                \"type\": \"General Purpose\",\n                \"hourly_price\": \"0.0056\",\n                \"monthly_price\": \"4.00\",\n                \"cores\": \"1\",\n                \"hdd\": \"20\",\n                \"ram\": \"512\",\n                \"bandwidth\": \"750\",\n                \"creation_allowed\": \"1\",\n                \"addons\" : [\n                    // IP addons may be unavailable in some locations [IP availability can be checked in the /vm/locations call]\n                    {\n                        \"id\": \"2\",\n                        \"name\": \"Additional IPv6\",\n                        \"monthly_price\": \"0.00\",\n                        \"hourly_price\": 0,\n                        \"type\": \"ipv6\"\n                    }\n                ],\n                \"ipv4\": \"included\", // Values can be: \"included\", \"addon\" or \"none\"\n                \"ipv6\": \"addon\" // Values can be: \"included\", \"addon\" or \"none\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/addon/add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "addon_name",
									"value": "",
									"description": "The name of the addon to add",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/addon/add",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"addon",
								"add"
							]
						},
						"description": "Add an addon to a VM."
					},
					"response": [
						{
							"name": "/vm/addon/add",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "addon_name",
											"value": "ipv6",
											"description": "The name of the addon to add",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/addon/add",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"addon",
										"add"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Addon added successfully\", // Success or Error message\n        \"result\": \"success\", // Can also be \"error\"\n        \"restart_required\": false // Only shown when result is success\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/addon/remove",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "addon_id",
									"value": "",
									"description": "The ID of the addon to remove (from the /vm/info call)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/addon/remove",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"addon",
								"remove"
							]
						},
						"description": "Remove an addon from a VM."
					},
					"response": [
						{
							"name": "/vm/addon/remove",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "addon_id",
											"value": "ip-15.235.151.82",
											"description": "The ID of the addon to remove (from the /vm/info call)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/addon/remove",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"addon",
										"remove"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Addon removed successfully\", // Success or Error message\n        \"result\": \"success\", // Can also be \"error\"\n        \"restart_required\": false // Only shown when result is success\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/bandwidth/suspend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "toggleTo",
									"value": "",
									"description": "The new status [on | off]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/bandwidth/suspend",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"bandwidth",
								"suspend"
							]
						},
						"description": "Turn the automatic bandwidth suspension on when the limit is reached."
					},
					"response": [
						{
							"name": "/vm/bandwidth/suspend",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "toggleTo",
											"value": "off",
											"description": "The new status [on | off]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/bandwidth/suspend",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"bandwidth",
										"suspend"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n    \"message\": \"Operation successful\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/boot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/boot/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"boot",
								""
							]
						},
						"description": "Boot a virtual server."
					},
					"response": [
						{
							"name": "/vm/boot",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/boot/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"boot",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"VPS has been started successfully\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/bootorder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "bootorder",
									"value": "",
									"description": "The virtual server's new boot sequence [cda (1)Hard Disk (2)CDROM | dca ((1)CDROM (2)Hard Disk)]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/bootorder/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"bootorder",
								""
							]
						},
						"description": "Change the boot order on a virtual server."
					},
					"response": [
						{
							"name": "/vm/bootorder",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "bootorder",
											"value": "dca",
											"description": "The virtual server's new boot sequence [cda (1)Hard Disk (2)CDROM | dca ((1)CDROM (2)Hard Disk)]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/bootorder/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"bootorder",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Boot order changed\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "location_id",
									"value": "",
									"description": "The virtual server's location ID.",
									"type": "text"
								},
								{
									"key": "instance_size",
									"value": "",
									"description": "The instance's size ID. [A list of available sizes can be returned with the /vm/sizes/ call]",
									"type": "text"
								},
								{
									"key": "template",
									"value": "",
									"description": "The ID of the OS' template or the UUID of the image to install [A list of available templates can be returned with the /vm/templates call and images with /vm/images/list]",
									"type": "text"
								},
								{
									"key": "hostname",
									"value": "",
									"description": "The New hostname of the VM",
									"type": "text"
								},
								{
									"key": "ssh_keys",
									"value": "",
									"description": "(optional) Array of SSH Keys' UUID",
									"type": "text",
									"disabled": true
								},
								{
									"key": "addons",
									"value": "",
									"description": "(optional) Array of addon IDs [A list of available addons can be returned with the /vm/sizes call]",
									"type": "text",
									"disabled": true
								},
								{
									"key": "project_uuid",
									"value": "",
									"description": "(optional) UUID",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/create/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"create",
								""
							]
						},
						"description": "Create a virtual server."
					},
					"response": [
						{
							"name": "/vm/create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "location_id",
											"value": "69",
											"description": "The virtual server's location ID.",
											"type": "text"
										},
										{
											"key": "instance_size",
											"value": "9",
											"description": "The instance's size ID. [A list of available sizes can be returned with the /vm/sizes/ call]",
											"type": "text"
										},
										{
											"key": "template",
											"value": "771",
											"description": "The ID of the OS' template or the UUID of the image to install [A list of available templates can be returned with the /vm/templates call and images with /vm/images/list]",
											"type": "text"
										},
										{
											"key": "hostname",
											"value": "test.com",
											"description": "The New hostname of the VM",
											"type": "text"
										},
										{
											"key": "ssh_keys",
											"value": "",
											"description": "(optional) Array of SSH Keys' UUID",
											"type": "text",
											"disabled": true
										},
										{
											"key": "addons",
											"value": "",
											"description": "(optional) Array of addon IDs [A list of available addons can be returned with the /vm/sizes call]",
											"type": "text",
											"disabled": true
										},
										{
											"key": "project_uuid",
											"value": "",
											"description": "(optional) UUID",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/create/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"create",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server created\",\n        \"id\": 1,\n        \"ip_address\": \"1.1.1.1\",\n        \"hostname\": \"test.com\",\n        \"password\": \"fAk3Passw0Rd\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/resize",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "instance_size",
									"value": "",
									"description": "The instance's size ID. [A list of available sizes can be returned with the /vm/sizes/ call]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/resize/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"resize",
								""
							]
						},
						"description": "Resize a virtual server."
					},
					"response": [
						{
							"name": "/vm/resize",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "instance_size",
											"value": "46",
											"description": "The instance's size ID. [A list of available sizes can be returned with the /vm/sizes/ call]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/resize/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"resize",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server size changed, please reboot\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/destroy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "confirm_close",
									"value": "",
									"description": "Parameter to confirm you want to pay the bandwidth overage",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/destroy/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"destroy",
								""
							]
						},
						"description": "Destroy virtual server."
					},
					"response": [
						{
							"name": "/vm/destroy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "confirm_close",
											"value": "",
											"description": "Parameter to confirm you want to pay the bandwidth overage",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/destroy/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"destroy",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server destroyed\"\n    }\n}\n// OR\n{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Bandwidth overage fees will be charged if you choose to close your VM now. If you still wish to proceed, please include the parameter confirm_close in your API call.\",\n        \"usageHours\": \"42\",\n        \"bandwidthOverusage\": \"420\" // In GB\n        \"bandwidthOverusageCost\": \"21\" // In your currency\n        \"additionalHoursForCharge\": \"18\" // In order to to avoid bandwidth overage fees, please wait this amount of hours without using your VM.\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/hostname",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "hostname",
									"value": "",
									"description": "The virtual server's new hostname.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/hostname/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"hostname",
								""
							]
						},
						"description": "Change virtual server's hostname."
					},
					"response": [
						{
							"name": "/vm/hostname",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "hostname",
											"value": "test.com",
											"description": "The virtual server's new hostname.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/hostname/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"hostname",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server hostname changed\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/image/create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/image/create/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"image",
								"create",
								""
							]
						},
						"description": "Create a new image from the given instance."
					},
					"response": [
						{
							"name": "/vm/image/create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/image/create/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"image",
										"create",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n    \"message\": \"Image successfully created\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/image/delete",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "",
									"description": "The image ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/image/delete/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"image",
								"delete",
								""
							]
						},
						"description": "Delete the given image from your account."
					},
					"response": [
						{
							"name": "/vm/image/delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "",
											"description": "The image ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/image/delete/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"image",
										"delete",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n    \"message\": \"Image successfully deleted\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/image/rename",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "",
									"description": "The image ID",
									"type": "text"
								},
								{
									"key": "new_name",
									"value": "",
									"description": "The new image name",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/image/rename/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"image",
								"rename",
								""
							]
						},
						"description": "Change the display name of a given image."
					},
					"response": [
						{
							"name": "/vm/image/rename",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "",
											"description": "The image ID",
											"type": "text"
										},
										{
											"key": "new_name",
											"value": "",
											"description": "The new image name",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/image/rename/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"image",
										"rename",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Image successfully renamed\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/mountiso",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "iso",
									"value": "",
									"description": "The ISO of the OS to be mounted [List of images returned with the /vm/info/ call]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/mountiso/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"mountiso",
								""
							]
						},
						"description": "Mount an ISO image on a virtual server."
					},
					"response": [
						{
							"name": "/vm/mountiso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "iso",
											"value": "Mikrotik-5.20.iso",
											"description": "The ISO of the OS to be mounted [List of images returned with the /vm/info/ call]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/mountiso/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"mountiso",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"ISO mounted\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/pae",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "pae",
									"value": "",
									"description": "The new PAE status [on | off]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/pae/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"pae",
								""
							]
						},
						"description": "Turn PAE on/off on a virtual server."
					},
					"response": [
						{
							"name": "/vm/pae",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "pae",
											"value": "off",
											"description": "The new PAE status [on | off]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/pae/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"pae",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server pae changed\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "password",
									"value": "",
									"description": "The new root password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/password/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"password",
								""
							]
						},
						"description": "Change root password."
					},
					"response": [
						{
							"name": "/vm/password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Qwerty((*)L)Phklji1992",
											"description": "The new root password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/password/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"password",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server root password changed\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/poweroff",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/poweroff",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"poweroff"
							]
						},
						"description": "Force the instance to power off; unlike a graceful shutdown, this action will not wait for the processes."
					},
					"response": [
						{
							"name": "/vm/poweroff",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/poweroff",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"poweroff"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"VPS has been powered off successfully\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/project/new",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "",
									"description": "The project name",
									"type": "text"
								},
								{
									"key": "is_default",
									"value": "",
									"description": "If the project should become the new default",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/project/new",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"project",
								"new"
							]
						},
						"description": "Create an OC project in which you can split your instances for different purposes."
					},
					"response": [
						{
							"name": "/vm/project/new",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Test",
											"description": "The project name",
											"type": "text"
										},
										{
											"key": "is_default",
											"value": "0",
											"description": "If the project should become the new default",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/project/new",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"project",
										"new"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"project\": {\n            \"uuid\": \"00a00a0a-a0aa-00aa-0000-00aaa000a0a0a\",\n            \"name\": \"My awesome project\",\n            \"is_default\": \"0\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/project/assign",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_uuid",
									"value": "{{project_uud}}",
									"description": "The project UUID",
									"type": "text"
								},
								{
									"key": "instance_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/project/assign",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"project",
								"assign"
							]
						},
						"description": "Allows you to move an instance to a different project."
					},
					"response": [
						{
							"name": "/vm/project/assign",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "project_uuid",
											"value": "{{project_uud}}",
											"description": "The project UUID",
											"type": "text"
										},
										{
											"key": "instance_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/project/assign",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"project",
										"assign"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Operation successful\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/project/delete",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_uuid",
									"value": "{{project_uud}}",
									"description": "The project UUID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/project/delete",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"project",
								"delete"
							]
						},
						"description": "Deletes a given project; you can't delete a project with instances inside."
					},
					"response": [
						{
							"name": "/vm/project/delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "project_uuid",
											"value": "{{project_uud}}",
											"description": "The project UUID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/project/delete",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"project",
										"delete"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Project successfully deleted\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/project/edit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_uuid",
									"value": "{{project_uuid}}",
									"description": "The project UUID",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "The new name",
									"type": "text"
								},
								{
									"key": "is_default",
									"value": "",
									"description": "If the project should become the new default",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/project/edit",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"project",
								"edit"
							]
						},
						"description": "Change the name of a given project or it's \"is_default\" value."
					},
					"response": [
						{
							"name": "/vm/project/edit",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "project_uuid",
											"value": "{{project_uuid}}",
											"description": "The project UUID",
											"type": "text"
										},
										{
											"key": "name",
											"value": "",
											"description": "The new name",
											"type": "text"
										},
										{
											"key": "is_default",
											"value": "",
											"description": "If the project should become the new default",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/project/edit",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"project",
										"edit"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Project successfully edited\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/reboot",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/reboot/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"reboot",
								""
							]
						},
						"description": "Reboot a virtual server."
					},
					"response": [
						{
							"name": "/vm/reboot",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/reboot/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"reboot",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Restart signal has been sent to the VPS\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/reinstall",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "template",
									"value": "",
									"description": "The ID of the OS' template or the UUID of the image to install [A list of available templates can be returned with the /vm/templates call and images with /vm/images/list]",
									"type": "text"
								},
								{
									"key": "ssh_keys",
									"value": "",
									"description": "(optional) Array of SSH Keys' UUID",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/reinstall/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"reinstall",
								""
							]
						},
						"description": "Reinstall a virtual server's OS."
					},
					"response": [
						{
							"name": "/vm/reinstall",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "template",
											"value": "446",
											"description": "The ID of the OS' template or the UUID of the image to install [A list of available templates can be returned with the /vm/templates call and images with /vm/images/list]",
											"type": "text"
										},
										{
											"key": "ssh_keys",
											"value": "",
											"description": "(optional) Array of SSH Keys' UUID",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/reinstall/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"reinstall",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server is being rebuilt\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/rescue/enable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The Virtual server ID",
									"type": "text"
								},
								{
									"key": "password",
									"value": "tIviOqxnrrFuT580FEE6",
									"description": "The password to access your instance in rescue mode",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/rescue/enable/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"rescue",
								"enable",
								""
							]
						},
						"description": "Enable rescue mode on a virtual server."
					},
					"response": [
						{
							"name": "/vm/rescue/enable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The Virtual server ID",
											"type": "text"
										},
										{
											"key": "password",
											"value": "tIviOqxnrrFuT580FEE6",
											"description": "The password to access your instance in rescue mode",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/rescue/enable/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"rescue",
										"enable",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Rescue mode enabled.\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/rescue/disable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/rescue/disable/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"rescue",
								"disable",
								""
							]
						},
						"description": "Disable rescue mode on a virtual server."
					},
					"response": [
						{
							"name": "/vm/rescue/disable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/rescue/disable/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"rescue",
										"disable",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Rescue mode disabled.\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/restore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								},
								{
									"key": "image",
									"value": "",
									"description": "The image ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/restore/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"restore",
								""
							]
						},
						"description": "Restore an image on a given instance."
					},
					"response": [
						{
							"name": "/vm/restore",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										},
										{
											"key": "image",
											"value": "",
											"description": "The image ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/restore/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"restore",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Image successfully restored on instance\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/shutdown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The virtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/shutdown/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"shutdown",
								""
							]
						},
						"description": "Shutdown a virtual server."
					},
					"response": [
						{
							"name": "/vm/shutdown",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The virtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/shutdown/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"shutdown",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Shutdown signal has been sent to the VPS\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/sshkey/delete",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ssh_key",
									"value": "",
									"description": "The UUID of the SSH key",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/sshkey/delete",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"sshkey",
								"delete"
							]
						},
						"description": "Removes the given SSH key from your available keys."
					},
					"response": [
						{
							"name": "/vm/sshkey/delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "ssh_key",
											"value": "",
											"description": "The UUID of the SSH key",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/sshkey/delete",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"sshkey",
										"delete"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"SSH Key successfully deleted\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/sshkey/edit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ssh_key",
									"value": "",
									"description": "The UUID of the SSH key",
									"type": "text"
								},
								{
									"key": "key_name",
									"value": "",
									"description": "The SSH key name",
									"type": "text"
								},
								{
									"key": "key_value",
									"value": "",
									"description": "The SSH key value (the public value of the SSH key)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/sshkey/edit",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"sshkey",
								"edit"
							]
						},
						"description": "Edit the name of a given SSH key."
					},
					"response": [
						{
							"name": "/vm/sshkey/edit",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "ssh_key",
											"value": "",
											"description": "The UUID of the SSH key",
											"type": "text"
										},
										{
											"key": "key_name",
											"value": "My SSH Key",
											"description": "The SSH key name",
											"type": "text"
										},
										{
											"key": "key_value",
											"value": "ssh-rsa AAA111...ZZZ999 example@hostname",
											"description": "The SSH key value (the public value of the SSH key)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/sshkey/edit",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"sshkey",
										"edit"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"keys\": [\n            {\n                \"name\": \"My SSH Key\",\n                \"value\": \"ssh-rsa AAA111...ZZZ999 example@hostname\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/sshkey/new",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "key_name",
									"value": "",
									"description": "The SSH key name",
									"type": "text"
								},
								{
									"key": "key_value",
									"value": "",
									"description": "The SSH key value (the public value of the SSH key)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/sshkey/new",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"sshkey",
								"new"
							]
						},
						"description": "Adds a new SSH key to your account's keys."
					},
					"response": [
						{
							"name": "/vm/sshkey/new",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "key_name",
											"value": "My SSH Key",
											"description": "The SSH key name",
											"type": "text"
										},
										{
											"key": "key_value",
											"value": "ssh-rsa AAA111...ZZZ999 example@hostname",
											"description": "The SSH key value (the public value of the SSH key)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/sshkey/new",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"sshkey",
										"new"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"keys\": [\n            {\n                \"uuid\": \"F0urTw5nTy\",\n                \"name\": \"My SSH Key\",\n                \"value\": \"ssh-rsa AAA111...ZZZ999 example@hostname\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/sshkeys/assign",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "",
									"description": "Virtual server ID",
									"type": "text"
								},
								{
									"key": "ssh_keys",
									"value": "",
									"description": "SSH keys UUID(s) to assign to virtual server",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/sshkeys/assign",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"sshkeys",
								"assign"
							]
						},
						"description": "Assign SSH Key(s) to a virtual server"
					},
					"response": []
				},
				{
					"name": "/vm/unmountiso",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The \tVirtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/unmountiso/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"unmountiso",
								""
							]
						},
						"description": "Unmount an ISO image on a virtual server."
					},
					"response": [
						{
							"name": "/vm/unmountiso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The \tVirtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/unmountiso/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"unmountiso",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"ISO unmounted\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/vnc",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The \tVirtual server ID",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/vnc/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"vnc",
								""
							]
						},
						"description": "Get VNC session credentials."
					},
					"response": [
						{
							"name": "/vm/vnc",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The \tVirtual server ID",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/vnc/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"vnc",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"vncip\": \"124.124.124.124\",\n        \"vncport\": \"5901\",\n        \"vncpassword\": \"1q2w3e4r5t\"\n    }\n}"
						}
					]
				},
				{
					"name": "/vm/vnc/password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}",
									"description": "The \tVirtual server ID",
									"type": "text"
								},
								{
									"key": "password",
									"value": "ZWMwk6zs5lpW7locYPkw0yxjZ",
									"description": "The new VNC password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/vm/vnc/password/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"vm",
								"vnc",
								"password",
								""
							]
						},
						"description": "Change VNC session password."
					},
					"response": [
						{
							"name": "/vm/vnc/password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "vm_id",
											"value": "{{vm_id}}",
											"description": "The \tVirtual server ID",
											"type": "text"
										},
										{
											"key": "password",
											"value": "ZWMwk6zs5lpW7locYPkw0yxjZ",
											"description": "The new VNC password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/vm/vnc/password/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"vm",
										"vnc",
										"password",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"message\": \"Virtual server vnc password changed\"\n    }\n}"
						}
					]
				}
			],
			"description": "The /vm section of the API allows its user to programmatically do what the client panel OneCloud manager does.\n\nFor exemple it can be used to automatically iterate througt all of a user vm and execute the reboot action on each of them."
		},
		{
			"name": "/STORE",
			"item": [
				{
					"name": "/store/configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs"
							],
							"query": [
								{
									"key": "page",
									"value": "",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								},
								{
									"key": "config_ids",
									"value": "",
									"description": "A comma-separated list of config IDs.",
									"disabled": true
								},
								{
									"key": "cpu_maker",
									"value": "",
									"description": "The maker of the CPU. [ AMD, Intel ]",
									"disabled": true
								},
								{
									"key": "core_amount",
									"value": "",
									"description": "The minimum amount of cores on the CPU.",
									"disabled": true
								},
								{
									"key": "cpu_frequency",
									"value": "",
									"description": "The minimum frequency of the CPU in MHz.",
									"disabled": true
								},
								{
									"key": "benchmark",
									"value": "",
									"description": "The minimum benchmark of the CPU.",
									"disabled": true
								},
								{
									"key": "memory",
									"value": "",
									"description": "The minimum amount of RAM (in MB) found on the configurations.",
									"disabled": true
								},
								{
									"key": "storage_amount",
									"value": "",
									"description": "The minimum amount of storage (in GB) that can be found in the configurations' drives.",
									"disabled": true
								},
								{
									"key": "storage_port_type",
									"value": "",
									"description": "The type of storage port that can be found on the configs. [ SATA | SAS ]",
									"disabled": true
								},
								{
									"key": "storage_type",
									"value": "",
									"description": "The type of drive that can be found on the configs. [ HDD | SSD | NVMe ]",
									"disabled": true
								},
								{
									"key": "drive_amount",
									"value": "",
									"description": "The minimum amount of drive that can be found on the configs.",
									"disabled": true
								},
								{
									"key": "ip_amount",
									"value": "",
									"description": "The minimum amount of IPs addresses that can be found on the configs.",
									"disabled": true
								},
								{
									"key": "bandwidth_speed",
									"value": "",
									"description": "The minimum bandwidth speed in Mbps that can be found on the configs.",
									"disabled": true
								},
								{
									"key": "bandwidth_limit",
									"value": "",
									"description": "The minimum amount of bandwidth in GB that can be found on the configs.",
									"disabled": true
								},
								{
									"key": "cities",
									"value": "",
									"description": "A comma-separated list of city IDs.",
									"disabled": true
								},
								{
									"key": "countries",
									"value": "",
									"description": "A comma-separated list of country IDs.",
									"disabled": true
								},
								{
									"key": "regions",
									"value": "",
									"description": "A comma-separated list of region IDs.",
									"disabled": true
								},
								{
									"key": "sla_tier",
									"value": "",
									"description": "The minimum SLA Tier of the configs. [ 1 (Platinum), 2 (Gold), 3 (Silver), 4 (Bronze), 5 (Best Effort) ]",
									"disabled": true
								},
								{
									"key": "upgrades",
									"value": "",
									"description": "A comma-separated list of upgrade type IDs.",
									"disabled": true
								},
								{
									"key": "is_soldout",
									"value": "",
									"description": "If the configs are sold-out.",
									"disabled": true
								},
								{
									"key": "is_in_promotion",
									"value": "",
									"description": "If the configs have an active promotion.",
									"disabled": true
								},
								{
									"key": "min_price",
									"value": "",
									"description": "The minimum price required of the configs.",
									"disabled": true
								},
								{
									"key": "max_price",
									"value": "",
									"description": "The maximum price required of the configs.",
									"disabled": true
								},
								{
									"key": "max_price",
									"value": "",
									"description": "The maximum price required of the configs.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of configs found in our catalogue."
					},
					"response": [
						{
							"name": "/store/configs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										},
										{
											"key": "config_ids",
											"value": "7563",
											"description": "A comma-separated list of config IDs.",
											"disabled": true
										},
										{
											"key": "cpu_maker",
											"value": "Intel",
											"description": "The maker of the CPU. [ AMD, Intel ]",
											"disabled": true
										},
										{
											"key": "core_amount",
											"value": "12",
											"description": "The minimum amount of cores on the CPU.",
											"disabled": true
										},
										{
											"key": "cpu_frequency",
											"value": "2000",
											"description": "The minimum frequency of the CPU in MHz.",
											"disabled": true
										},
										{
											"key": "benchmark",
											"value": "2000",
											"description": "The minimum benchmark of the CPU.",
											"disabled": true
										},
										{
											"key": "memory",
											"value": "4",
											"description": "The minimum amount of RAM (in MB) found on the configurations.",
											"disabled": true
										},
										{
											"key": "storage_amount",
											"value": "500",
											"description": "The minimum amount of storage (in GB) that can be found in the configurations' drives.",
											"disabled": true
										},
										{
											"key": "storage_port_type",
											"value": "SATA",
											"description": "The type of storage port that can be found on the configs. [ SATA | SAS ]",
											"disabled": true
										},
										{
											"key": "storage_type",
											"value": "HDD",
											"description": "The type of drive that can be found on the configs. [ HDD | SSD | NVMe ]",
											"disabled": true
										},
										{
											"key": "drive_amount",
											"value": "4",
											"description": "The minimum amount of drive that can be found on the configs.",
											"disabled": true
										},
										{
											"key": "ip_amount",
											"value": "2",
											"description": "The minimum amount of IPs addresses that can be found on the configs.",
											"disabled": true
										},
										{
											"key": "bandwidth_speed",
											"value": "0",
											"description": "The minimum bandwidth speed in Mbps that can be found on the configs.",
											"disabled": true
										},
										{
											"key": "bandwidth_limit",
											"value": "0",
											"description": "The minimum amount of bandwidth in GB that can be found on the configs.",
											"disabled": true
										},
										{
											"key": "cities",
											"value": "140",
											"description": "A comma-separated list of city IDs.",
											"disabled": true
										},
										{
											"key": "countries",
											"value": "",
											"description": "A comma-separated list of country IDs.",
											"disabled": true
										},
										{
											"key": "regions",
											"value": "62",
											"description": "A comma-separated list of region IDs.",
											"disabled": true
										},
										{
											"key": "sla_tier",
											"value": "5",
											"description": "The minimum SLA Tier of the configs. [ 1 (Platinum), 2 (Gold), 3 (Silver), 4 (Bronze), 5 (Best Effort) ]",
											"disabled": true
										},
										{
											"key": "upgrades",
											"value": "7,4,1",
											"description": "A comma-separated list of upgrade type IDs.",
											"disabled": true
										},
										{
											"key": "is_soldout",
											"value": "0",
											"description": "If the configs are sold-out.",
											"disabled": true
										},
										{
											"key": "is_in_promotion",
											"value": "1",
											"description": "If the configs have an active promotion.",
											"disabled": true
										},
										{
											"key": "min_price",
											"value": "1000000",
											"description": "The minimum price required of the configs.",
											"disabled": true
										},
										{
											"key": "max_price",
											"value": "11000",
											"description": "The maximum price required of the configs.",
											"disabled": true
										},
										{
											"key": "max_price",
											"value": "11000",
											"description": "The maximum price required of the configs.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"1\",\n        \"total_number_of_entries\": \"1\",\n        \"configs\": [\n            {\n                \"id\": \"38\",\n                \"url\": \"https://oneprovider.com/configure/dediconf/38\",\n                \"tier\": \"2\",\n                \"group\": \"Pro Servers\",\n                \"ip_amount\": \"1\",\n                \"stock\": \"Limited\",\n                \"is_soldout\": \"1\",\n                \"billing\": {\n                    \"price\": \"1000\",\n                    \"setup_fee\": \"0\",\n                    \"unit\": \"Cents\",\n                    \"cycle\": \"Monthly\",\n                    \"currency\": \"EUR\"\n                },\n                \"location\": {\n                    \"city_id\": \"34\",\n                    \"city_name\": \"Paris\",\n                    \"country_id\": \"9\",\n                    \"country_name\": \"France\",\n                    \"region_id\": \"4\",\n                    \"region_name\": \"Europe\",\n                    \"display_name\": \"Paris, FR\"\n                },\n                \"cpu\": {\n                    \"name\": \"Core i3-530\",\n                    \"maker\": \"Intel\",\n                    \"amount\": \"1\",\n                    \"core_amount\": \"2\",\n                    \"frequency\": \"2.933\",\n                    \"frequency_unit\": \"GHz\",\n                    \"benchmark\": \"1438\",\n                    \"display_name\": \"Intel Core i3-530 2.9GHz 2 cores\"\n                },\n                \"storage\": {\n                    \"amount\": \"1\",\n                    \"unit\": \"TB\",\n                    \"drive_amount\": \"1\",\n                    \"default_amount\": \"1\",\n                    \"additional_amount\": \"0\",\n                    \"display_name\": \"1 TB (HDD SATA)\"\n                },\n                \"memory\": {\n                    \"amount\": \"4\",\n                    \"unit\": \"GB\",\n                    \"type\": \"DDR3\",\n                    \"display_name\": \"4 GB DDR3\"\n                },\n                \"bandwidth\": {\n                    \"speed\": \"1\",\n                    \"speed_unit\": \"Gbps\",\n                    \"limit\": \"0.0\",\n                    \"limit_unit\": \"GB\",\n                    \"display_name\": \"Unmetered @ 1 Gbps\"\n                },\n                \"upgrades\": [\n                    \"Hardware RAID\",\n                    \"DDoS protection\",\n                    \"Additional IP\",\n                    \"IPMI\"\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/configs/{{config_id}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/store/configs/{{config_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"{{config_id}}"
							]
						},
						"description": "Get information on a specified config."
					},
					"response": [
						{
							"name": "/store/configs/{{config_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/store/configs/{{config_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"{{config_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"config\": {\n            \"id\": \"38\",\n            \"url\": \"https://oneprovider.com/configure/dediconf/38\",\n            \"tier\": \"2\",\n            \"ip_amount\": \"1\",\n            \"stock\": \"Limited\",\n            \"is_soldout\": \"1\",\n            \"billing\": {\n                \"price\": \"1000\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Monthly\",\n                \"currency\": \"EUR\"\n            },\n            \"location\": {\n                \"city_id\": \"34\",\n                \"city_name\": \"Paris\",\n                \"country_id\": \"9\",\n                \"country_name\": \"France\",\n                \"region_id\": \"4\",\n                \"region_name\": \"Europe\",\n                \"display_name\": \"Paris, FR\"\n            },\n            \"cpu\": {\n                \"name\": \"Core i3-530\",\n                \"maker\": \"Intel\",\n                \"amount\": \"1\",\n                \"core_amount\": \"2\",\n                \"frequency\": \"2.933\",\n                \"frequency_unit\": \"GHz\",\n                \"benchmark\": \"1438\",\n                \"display_name\": \"Intel Core i3-530 2.9GHz 2 cores\"\n            },\n            \"storage\": {\n                \"amount\": \"1\",\n                \"unit\": \"TB\",\n                \"drive_amount\": \"1\",\n                \"default_amount\": \"1\",\n                \"additional_amount\": \"0\",\n                \"display_name\": \"1 TB (HDD SATA)\"\n            },\n            \"memory\": {\n                \"amount\": \"4\",\n                \"unit\": \"GB\",\n                \"type\": \"DDR3\",\n                \"display_name\": \"4 GB DDR3\"\n            },\n            \"bandwidth\": {\n                \"speed\": \"1\",\n                \"speed_unit\": \"Gbps\",\n                \"limit\": \"0.0\",\n                \"limit_unit\": \"GB\",\n                \"display_name\": \"Unmetered @ 1 Gbps\"\n            },\n            \"upgrades\": [\n                \"Hardware RAID\",\n                \"DDoS protection\",\n                \"Additional IP\",\n                \"IPMI\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/configs/{{config_id}}/drives",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs/{{config_id}}/drives",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"{{config_id}}",
								"drives"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of available drives for the config."
					},
					"response": [
						{
							"name": "/store/configs/{{config_id}}/drives",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs/{{config_id}}/drives",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"{{config_id}}",
										"drives"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"1\",\n        \"total_number_of_entries\": \"1\",\n        \"drives\": [\n            {\n                \"name\": \"Main Storage\",\n                \"required\": \"true\",\n                \"default\": \"38\",\n                \"choices\": [\n                    {\n                        \"id\": \"38\",\n                        \"capacity\": \"1\",\n                        \"unit\": \"TB\",\n                        \"amount\": \"2\",\n                        \"drive_type\": \"HDD\",\n                        \"port_type\": \"SATA\",\n                        \"display_name\": \"2x 1 TB (HDD SATA)\",\n                        \"billing\": {\n                            \"recurring\": \"0\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/configs/{{config_id}}/softwares",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs/{{config_id}}/softwares",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"{{config_id}}",
								"softwares"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of available softwares for the config."
					},
					"response": [
						{
							"name": "/store/configs/{{config_id}}/softwares",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs/{{config_id}}/softwares",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"{{config_id}}",
										"softwares"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"1\",\n        \"total_number_of_entries\": \"1\",\n        \"softwares\": [\n            {\n                \"name\": \"Operating System\",\n                \"required\": \"true\",\n                \"is_self_install\": \"1\",\n                \"choices\": [\n                    {\n                        \"id\": \"78\",\n                        \"name\": \"Arch Linux\",\n                        \"distribution\": \"Archlinux\",\n                        \"architecture\": \"x64\",\n                        \"billing\": {\n                            \"recurring\": \"0\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"56\",\n                        \"name\": \"CentOS 6.7\",\n                        \"distribution\": \"CentOS\",\n                        \"architecture\": \"x64\",\n                        \"billing\": {\n                            \"recurring\": \"0\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"53\",\n                        \"name\": \"Windows Datacenter 2012 R2\",\n                        \"distribution\": \"Windows\",\n                        \"architecture\": \"x64\",\n                        \"billing\": {\n                            \"recurring\": \"28000\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"41\",\n                        \"name\": \"Windows Server Standard  2008R2 fr-FR\",\n                        \"distribution\": \"Windows\",\n                        \"architecture\": \"x64\",\n                        \"billing\": {\n                            \"recurring\": \"4000\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/configs/{{config_id}}/upgrades",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs/{{config_id}}/upgrades",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"{{config_id}}",
								"upgrades"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of available upgrades for the config."
					},
					"response": [
						{
							"name": "/store/configs/{{config_id}}/upgrades",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs/{{config_id}}/upgrades",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"{{config_id}}",
										"upgrades"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"4\",\n        \"total_number_of_entries\": \"4\",\n        \"upgrades\": [\n            {\n                \"id\": \"4\",\n                \"name\": \"Hardware RAID\",\n                \"required\": \"true\",\n                \"default\": \"13\",\n                \"choices\": [\n                    {\n                        \"id\": \"13\",\n                        \"model\": \"MegaRAID\",\n                        \"value\": \"\",\n                        \"billing\": {\n                            \"recurring\": \"0\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"10\",\n                \"name\": \"DDoS protection\",\n                \"required\": \"true\",\n                \"default\": \"1175\",\n                \"choices\": [\n                    {\n                        \"id\": \"1175\",\n                        \"model\": \"Minimal Protection\",\n                        \"value\": \"\",\n                        \"billing\": {\n                            \"recurring\": \"0\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"15\",\n                \"name\": \"IPMI\",\n                \"required\": \"true\",\n                \"default\": \"6122\",\n                \"choices\": [\n                    {\n                        \"id\": \"6122\",\n                        \"model\": \"Generic with Virtual Media\",\n                        \"value\": \"\",\n                        \"billing\": {\n                            \"recurring\": \"0\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"id\": \"7\",\n                \"name\": \"Additional IP\",\n                \"required\": \"false\",\n                \"default\": \"false\",\n                \"choices\": [\n                    {\n                        \"id\": \"4370\",\n                        \"model\": \"Unit\",\n                        \"value\": \"1\",\n                        \"billing\": {\n                            \"recurring\": \"250\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"4412\",\n                        \"model\": \"Unit\",\n                        \"value\": \"4\",\n                        \"billing\": {\n                            \"recurring\": \"1000\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"4412\",\n                        \"model\": \"Unit\",\n                        \"value\": \"8\",\n                        \"billing\": {\n                            \"recurring\": \"2000\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"4412\",\n                        \"model\": \"Unit\",\n                        \"value\": \"16\",\n                        \"billing\": {\n                            \"recurring\": \"4000\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    },\n                    {\n                        \"id\": \"4521\",\n                        \"model\": \"Block\",\n                        \"value\": \"27\",\n                        \"billing\": {\n                            \"recurring\": \"8000\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"EUR\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/config/cycles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs/cycles",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"cycles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of billing cycles available when ordering configs."
					},
					"response": [
						{
							"name": "/store/config/cycles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs/cycles",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"cycles"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"4\",\n        \"total_number_of_entries\": \"4\",\n        \"cycles\": [\n            {\n                \"id\": \"1\",\n                \"rebate\": \"0\",\n                \"nb_months\": \"1\",\n                \"full_name\": \"Monthly\",\n                \"short_name\": \"Monthly\"\n            },\n            {\n                \"id\": \"3\",\n                \"rebate\": \"0.05\",\n                \"nb_months\": \"3\",\n                \"full_name\": \"Quarterly (5% off)\",\n                \"short_name\": \"Quarterly\"\n            },\n            {\n                \"id\": \"6\",\n                \"rebate\": \"0.07\",\n                \"nb_months\": \"6\",\n                \"full_name\": \"Semi-Annually (7% off)\",\n                \"short_name\": \"Semi-Annually\"\n            },\n            {\n                \"id\": \"12\",\n                \"rebate\": \"0.10\",\n                \"nb_months\": \"12\",\n                \"full_name\": \"Annually (10% off)\",\n                \"short_name\": \"Annually\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/configs/locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs/locations",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"locations"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								},
								{
									"key": "regions",
									"value": "",
									"description": "(optional) A comma-separated list of region IDs.",
									"disabled": true
								},
								{
									"key": "countries",
									"value": "",
									"description": "(optional) A comma-separated list of country IDs.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of locations where our configs can be found."
					},
					"response": [
						{
							"name": "/store/configs/locations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs/locations",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"locations"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										},
										{
											"key": "regions",
											"value": "2,8",
											"description": "(optional) A comma-separated list of region IDs.",
											"disabled": true
										},
										{
											"key": "countries",
											"value": "3, 5",
											"description": "(optional) A comma-separated list of country IDs.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"2\",\n        \"total_number_of_entries\": \"2\",\n        \"locations\": [\n            {\n                \"id\": \"34\",\n                \"name\": \"Paris\",\n                \"state\": \"FR\",\n                \"code\": \"FR\",\n                \"airport_code\": \"PAR\",\n                \"display_name\": \"Paris, FR\",\n                \"region\": {\n                    \"id\": \"4\",\n                    \"name\": \"Europe\"\n                },\n                \"country\": {\n                    \"id\": \"9\",\n                    \"name\": \"France\",\n                    \"code\": \"FR\",\n                    \"currency\": \"EUR\"\n                }\n            },\n            {\n                \"id\": \"184\",\n                \"name\": \"Lille\",\n                \"state\": \"FR\",\n                \"code\": \"FR\",\n                \"airport_code\": \"LIL\",\n                \"display_name\": \"Lille, FR\",\n                \"region\": {\n                    \"id\": \"4\",\n                    \"name\": \"Europe\"\n                },\n                \"country\": {\n                    \"id\": \"9\",\n                    \"name\": \"France\",\n                    \"code\": \"FR\",\n                    \"currency\": \"EUR\"\n                }\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/config/upgrades",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/configs/upgrades?page=1&limit=20",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"configs",
								"upgrades"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display."
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page."
								}
							]
						},
						"description": "Get a list of upgrades that can be available in some of our configs."
					},
					"response": [
						{
							"name": "/store/config/upgrades",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/configs/upgrades?page=1&limit=20",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"configs",
										"upgrades"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display."
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page."
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"5\",\n        \"total_number_of_entries\": \"5\",\n        \"upgrades\": [\n            {\n                \"id\": \"1\",\n                \"name\": \"RAM Upgrade\"\n            },\n            {\n                \"id\": \"3\",\n                \"name\": \"KVM\"\n            },\n            {\n                \"id\": \"4\",\n                \"name\": \"Hardware RAID\"\n            },\n            {\n                \"id\": \"5\",\n                \"name\": \"Port Speed\"\n            },\n            {\n                \"id\": \"6\",\n                \"name\": \"Bandwidth Limit\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/carts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "(optional) The status of the carts to be returned [ Active | Ordered].",
									"disabled": true
								}
							]
						},
						"description": "Get the client's list of carts."
					},
					"response": [
						{
							"name": "/store/carts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/carts",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"description": "(optional) The status of the carts to be returned [ Active | Ordered].",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"1\",\n        \"total_number_of_entries\": \"1\",\n        \"carts\": [\n            {\n                \"id\": \"1\",\n                \"status\": \"Active\",\n                \"billing\": {\n                    \"recurring\": \"11271\",\n                    \"setup_fee\": \"0\",\n                    \"unit\": \"Cents\",\n                    \"cycle\": \"Monthly\",\n                    \"currency\": \"CAD\"\n                },\n                \"promotion\": {\n                    \"code\": \"FAKE\",\n                    \"type\": \"Percentage\",\n                    \"value\": \"0.50\"\n                },\n                \"items\": [\n                    {\n                        \"id\": \"4328\",\n                        \"quantity\": \"1\",\n                        \"options\": {\n                            \"drives\": [\n                                \"18419\"\n                            ],\n                            \"software\": \"6\",\n                            \"upgrades\": {\n                                \"4\": \"13\",\n                                \"10\": \"1175\",\n                                \"15\": \"6122\"\n                            }\n                        },\n                        \"billing\": {\n                            \"recurring\": \"11271\",\n                            \"setup_fee\": \"0\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"CAD\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts/{{cart_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/carts/{{cart_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts",
								"{{cart_id}}"
							]
						},
						"description": "Get information on a specified cart."
					},
					"response": [
						{
							"name": "/store/carts/{{cart_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/carts/{{cart_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts",
										"{{cart_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"cart\": {\n            \"id\": \"1\",\n            \"status\": \"Ordered\",\n            \"billing\": {\n                \"recurring\": \"11271\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Monthly\",\n                \"currency\": \"CAD\"\n            },\n            \"promotion\": {\n                \"code\": \"FAKE\",\n                \"type\": \"Percentage\",\n                \"value\": \"0.50\"\n            },\n            \"items\": [\n                {\n                    \"id\": \"4328\",\n                    \"quantity\": \"1\",\n                    \"options\": {\n                        \"drives\": [\n                            \"18419\"\n                        ],\n                        \"software\": \"6\",\n                        \"upgrades\": {\n                            \"4\": \"13\",\n                            \"10\": \"1175\",\n                            \"15\": \"6122\"\n                        }\n                    },\n                    \"billing\": {\n                        \"recurring\": \"11271\",\n                        \"setup_fee\": \"0\",\n                        \"unit\": \"Cents\",\n                        \"cycle\": \"Monthly\",\n                        \"currency\": \"CAD\"\n                    }\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/store/carts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts"
							]
						},
						"description": "Create a new shopping cart or return the current active one."
					},
					"response": [
						{
							"name": "/store/carts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/store/carts",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"cart\": {\n            \"id\": \"3\",\n            \"status\": \"Active\",\n            \"billing\": {\n                \"recurring\": \"0\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Monthly\",\n                \"currency\": \"CAD\"\n            },\n            \"promotion\": {},\n            \"items\": []\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts/{{cart_id}}/clear",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/store/carts/{{cart_id}}/clear",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts",
								"{{cart_id}}",
								"clear"
							]
						},
						"description": "Empty and reset the settings of a shopping cart."
					},
					"response": [
						{
							"name": "/store/carts/{{cart_id}}/clear",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/store/carts/{{cart_id}}/clear",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts",
										"{{cart_id}}",
										"clear"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"cart\": {\n            \"id\": \"3\",\n            \"status\": \"Active\",\n            \"billing\": {\n                \"recurring\": \"0\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Monthly\",\n                \"currency\": \"CAD\"\n            },\n            \"promotion\": {},\n            \"items\": []\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts/{{cart_id}}/items/{{config_id}}/add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "quantity",
									"value": "",
									"description": "The amount of this configuration that should be in the cart.",
									"type": "text"
								},
								{
									"key": "drives",
									"value": "",
									"description": "(optional) A comma-separated list of Drive IDs.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "software",
									"value": "",
									"description": "(optional - required when not self-install) The Software ID to install on the new server.",
									"type": "text"
								},
								{
									"key": "upgrades",
									"value": "",
									"description": "(optional) List of upgrades, where the key is the upgrade type ID, and the value is the ID of the selected upgrade choice.\nExemple: {\"10\": 1175, \"15\": 6122}.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/store/carts/{{cart_id}}/items/{{config_id}}/add",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts",
								"{{cart_id}}",
								"items",
								"{{config_id}}",
								"add"
							]
						},
						"description": "Add or update an item in the cart."
					},
					"response": [
						{
							"name": "/store/carts/{{cart_id}}/items/{{config_id}}/add",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "quantity",
											"value": "2",
											"description": "The amount of this configuration that should be in the cart.",
											"type": "text"
										},
										{
											"key": "drives",
											"value": "[\"52\"]",
											"description": "(optional) A comma-separated list of Drive IDs.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "software",
											"value": "153",
											"description": "(optional - required when not self-install) The Software ID to install on the new server.",
											"type": "text"
										},
										{
											"key": "upgrades",
											"value": "{\"7\":\"23210\"}",
											"description": "(optional) List of upgrades, where the key is the upgrade type ID, and the value is the ID of the selected upgrade choice.\nExemple: {\"10\": 1175, \"15\": 6122}.",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/store/carts/{{cart_id}}/items/{{config_id}}/add",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts",
										"{{cart_id}}",
										"items",
										"{{config_id}}",
										"add"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"cart\": {\n            \"id\": \"1\",\n            \"status\": \"Active\",\n            \"billing\": {\n                \"recurring\": \"12102\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Montlhy\",\n                \"currency\": \"CAD\"\n            },\n            \"promotion\": {\n                \"code\": \"FAKE\",\n                \"type\": \"Percentage\",\n                \"value\": \"0.50\"\n            },\n            \"items\": [\n                {\n                    \"id\": \"38\",\n                    \"quantity\": \"1\",\n                    \"options\": {\n                        \"drives\": [\n                            \"38\"\n                        ],\n                        \"software\": \"\",\n                        \"upgrades\": {\n                            \"4\": \"13\",\n                            \"10\": \"1175\",\n                            \"15\": \"6122\"\n                        }\n                    },\n                    \"billing\": {\n                        \"recurring\": \"831\",\n                        \"setup_fee\": \"0\",\n                        \"unit\": \"Cents\",\n                        \"cycle\": \"Montlhy\",\n                        \"currency\": \"CAD\"\n                    }\n                },\n                {\n                    \"id\": \"4328\",\n                    \"quantity\": \"1\",\n                    \"options\": {\n                        \"drives\": [\n                            \"18419\"\n                        ],\n                        \"software\": \"6\",\n                        \"upgrades\": {\n                            \"4\": \"13\",\n                            \"10\": \"1175\",\n                            \"15\": \"6122\"\n                        }\n                    },\n                    \"billing\": {\n                        \"recurring\": \"11271\",\n                        \"setup_fee\": \"0\",\n                        \"unit\": \"Cents\",\n                        \"cycle\": \"Montlhy\",\n                        \"currency\": \"CAD\"\n                    }\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts/{{cart_id}}/items/{{config_id}}/remove",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/store/carts/{{cart_id}}/items/{{config_id}}/remove",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts",
								"{{cart_id}}",
								"items",
								"{{config_id}}",
								"remove"
							]
						},
						"description": "Remove an item from the cart."
					},
					"response": [
						{
							"name": "/store/carts/{{cart_id}}/items/{{config_id}}/remove",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/store/carts/{{cart_id}}/items/{{config_id}}/remove",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts",
										"{{cart_id}}",
										"items",
										"{{config_id}}",
										"remove"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"cart\": {\n            \"id\": \"1\",\n            \"status\": \"Active\",\n            \"billing\": {\n                \"recurring\": \"11271\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Monthly\",\n                \"currency\": \"CAD\"\n            },\n            \"promotion\": {\n                \"code\": \"FAKE\",\n                \"type\": \"Percentage\",\n                \"value\": \"0.50\"\n            },\n            \"items\": [\n                {\n                    \"id\": \"4328\",\n                    \"quantity\": \"1\",\n                    \"options\": {\n                        \"drives\": [\n                            \"18419\"\n                        ],\n                        \"software\": \"6\",\n                        \"upgrades\": {\n                            \"4\": \"13\",\n                            \"10\": \"1175\",\n                            \"15\": \"6122\"\n                        }\n                    },\n                    \"billing\": {\n                        \"recurring\": \"11271\",\n                        \"setup_fee\": \"0\",\n                        \"unit\": \"Cents\",\n                        \"cycle\": \"Monthly\",\n                        \"currency\": \"CAD\"\n                    }\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/carts/{{cart_id}}/update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "billing_cycle",
									"value": "",
									"description": "The billing cycle of all products found in the cart. [ 1 (Monthly), 3 (Quarterly), 6 (Semi-Annually), 12 (Annually) ]",
									"type": "text"
								},
								{
									"key": "promotion",
									"value": "",
									"description": "(optional) The promotion to attach to the cart.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/store/carts/{{cart_id}}/update",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"carts",
								"{{cart_id}}",
								"update"
							]
						},
						"description": "Update the specified cart."
					},
					"response": [
						{
							"name": "/store/carts/{{cart_id}}/update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "billing_cycle",
											"value": "1",
											"description": "The billing cycle of all products found in the cart. [ 1 (Monthly), 3 (Quarterly), 6 (Semi-Annually), 12 (Annually) ]",
											"type": "text"
										},
										{
											"key": "promotion",
											"value": "TESTFRED001",
											"description": "(optional) The promotion to attach to the cart.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/store/carts/{{cart_id}}/update",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"carts",
										"{{cart_id}}",
										"update"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"cart\": {\n            \"id\": \"1\",\n            \"status\": \"Active\",\n            \"billing\": {\n                \"recurring\": \"11271\",\n                \"setup_fee\": \"0\",\n                \"unit\": \"Cents\",\n                \"cycle\": \"Monthly\",\n                \"currency\": \"CAD\"\n            },\n            \"promotion\": {\n                \"code\": \"FAKE\",\n                \"type\": \"Percentage\",\n                \"value\": \"0.50\"\n            },\n            \"items\": [\n                {\n                    \"id\": \"4328\",\n                    \"quantity\": \"1\",\n                    \"options\": {\n                        \"drives\": [\n                            \"18419\"\n                        ],\n                        \"software\": \"6\",\n                        \"upgrades\": {\n                            \"4\": \"13\",\n                            \"10\": \"1175\",\n                            \"15\": \"6122\"\n                        }\n                    },\n                    \"billing\": {\n                        \"recurring\": \"11271\",\n                        \"setup_fee\": \"0\",\n                        \"unit\": \"Cents\",\n                        \"cycle\": \"Monthly\",\n                        \"currency\": \"CAD\"\n                    }\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/orders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cart_id",
									"value": "{{cart_id}}",
									"description": "The ID of the cart",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/store/orders",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"orders"
							]
						},
						"description": "Create a new order from the given cart."
					},
					"response": [
						{
							"name": "/store/orders",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "cart_id",
											"value": "{{cart_id}}",
											"description": "The ID of the cart",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/store/orders",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"orders"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"order\": {\n            \"id\": \"1\",\n            \"status\": \"Unpaid\",\n            \"creation_date\": \"2022-06-21 14:28:24\",\n            \"invoice\": {\n                \"id\": \"1\",\n                \"status\": \"Unpaid\",\n                \"payment_method\": \"paypal\",\n                \"creation_date\": \"2022-06-21 14:28:24\",\n                \"due_date\": \"2022-07-05\",\n                \"payment_date\": \"0000-00-00 00:00:00\",\n                \"billing\": {\n                    \"subtotal\": \"2494\",\n                    \"tax1\": \"125\",\n                    \"tax2\": \"249\",\n                    \"credit\": \"0\",\n                    \"total\": \"2868\",\n                    \"unit\": \"Cents\",\n                    \"cycle\": \"Monthly\",\n                    \"currency\": \"CAN\"\n                },\n                \"items\": [\n                    {\n                        \"id\": \"1\",\n                        \"type\": \"hosting\",\n                        \"description\": \"Dedicated Server (08/08/2022 - 08/09/2022)\\nService #230831\\nLocation: Charlotte - US\\nCPU: 2x Intel Xeon L5520 - 2.27 GHz - 4 core(s)\\nRAM: 32GB [...]\",\n                        \"billing\": {\n                            \"recurring\": \"2494\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"CAN\"\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/orders/{{order_id}}/cancel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/orders/{{order_id}}/cancel",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"orders",
								"{{order_id}}",
								"cancel"
							]
						},
						"description": "Send an order cancellation request."
					},
					"response": [
						{
							"name": "/store/orders/{{order_id}}/cancel",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/orders/{{order_id}}/cancel",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"orders",
										"{{order_id}}",
										"cancel"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"order\": {\n            \"id\": \"1\",\n            \"status\": \"Cancelled\",\n            \"creation_date\": \"2022-06-21 14:28:24\",\n            \"invoice\": {\n                \"id\": \"1\",\n                \"status\": \"Cancelled\",\n                \"payment_method\": \"paypal\",\n                \"creation_date\": \"2022-06-21 14:28:24\",\n                \"due_date\": \"2022-07-05\",\n                \"payment_date\": \"0000-00-00 00:00:00\",\n                \"billing\": {\n                    \"subtotal\": \"2494\",\n                    \"tax1\": \"125\",\n                    \"tax2\": \"249\",\n                    \"credit\": \"0\",\n                    \"total\": \"2868\",\n                    \"unit\": \"Cents\",\n                    \"cycle\": \"Monthly\",\n                    \"currency\": \"CAN\"\n                },\n                \"items\": [\n                    {\n                        \"id\": \"1\",\n                        \"type\": \"hosting\",\n                        \"description\": \"Dedicated Server (08/08/2022 - 08/09/2022)\\nService #230831\\nLocation: Charlotte - US\\nCPU: 2x Intel Xeon L5520 - 2.27 GHz - 4 core(s)\\nRAM: 32GB [...]\",\n                        \"billing\": {\n                            \"recurring\": \"2494\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"CAN\"\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "/store/orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/orders",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "(optional) The status of the orders to be returned [Paid | Unpaid | Cancelled | Refunded].",
									"disabled": true
								},
								{
									"key": "from_api_only",
									"value": "",
									"description": "(optional - default 1) If the order was made from the API.",
									"disabled": true
								}
							]
						},
						"description": "Get the client's list of orders."
					},
					"response": [
						{
							"name": "/store/orders",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/orders",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"orders"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"description": "(optional) The status of the orders to be returned [Paid | Unpaid | Cancelled | Refunded].",
											"disabled": true
										},
										{
											"key": "from_api_only",
											"value": "",
											"description": "(optional - default 1) If the order was made from the API.",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"1\",\n        \"total_number_of_entries\": \"1\",\n        \"orders\": [\n            {\n                \"id\": \"1\",\n                \"status\": \"Paid\",\n                \"creation_date\": \"2022-06-21 14:28:24\",\n                \"invoice\": {\n                    \"id\": \"1\",\n                    \"status\": \"Paid\",\n                    \"payment_method\": \"paypal\",\n                    \"creation_date\": \"2022-06-21 14:28:24\",\n                    \"due_date\": \"2022-07-05\",\n                    \"payment_date\": \"2022-06-21 14:28:49\",\n                    \"billing\": {\n                        \"subtotal\": \"2494\",\n                        \"tax1\": \"125\",\n                        \"tax2\": \"249\",\n                        \"credit\": \"2868\",\n                        \"total\": \"0\",\n                        \"unit\": \"Cents\",\n                        \"cycle\": \"Monthly\",\n                        \"currency\": \"CAN\"\n                    },\n                    \"items\": [\n                        {\n                            \"id\": \"1\",\n                            \"type\": \"hosting\",\n                            \"description\": \"Dedicated Server (08/08/2022 - 08/09/2022)\\nService #230831\\nLocation: Charlotte - US\\nCPU: 2x Intel Xeon L5520 - 2.27 GHz - 4 core(s) [...]\",\n                            \"billing\": {\n                                \"recurring\": \"2494\",\n                                \"unit\": \"Cents\",\n                                \"cycle\": \"Monthly\",\n                                \"currency\": \"CAN\"\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/store/orders/{{order_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/store/orders/{{order_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"store",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Get information on a specified order."
					},
					"response": [
						{
							"name": "/store/orders/{{order_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/store/orders/{{order_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"store",
										"orders",
										"{{order_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"order\": {\n            \"id\": \"1\",\n            \"status\": \"Paid\",\n            \"creation_date\": \"2022-06-21 14:28:24\",\n            \"invoice\": {\n                \"id\": \"1\",\n                \"status\": \"Paid\",\n                \"payment_method\": \"paypal\",\n                \"creation_date\": \"2022-06-21 14:28:24\",\n                \"due_date\": \"2022-07-05\",\n                \"payment_date\": \"2022-06-21 14:28:49\",\n                \"billing\": {\n                    \"subtotal\": \"2494\",\n                    \"tax1\": \"125\",\n                    \"tax2\": \"249\",\n                    \"credit\": \"2868\",\n                    \"total\": \"0\",\n                    \"unit\": \"Cents\",\n                    \"cycle\": \"Monthly\",\n                    \"currency\": \"CAN\"\n                },\n                \"items\": [\n                    {\n                        \"id\": \"1\",\n                        \"type\": \"hosting\",\n                        \"description\": \"Dedicated Server (08/08/2022 - 08/09/2022)\\nService #230831\\nLocation: Charlotte - US\\nCPU: 2x Intel Xeon L5520 - 2.27 GHz - 4 core(s)\\nRAM: 32GB [...]\",\n                        \"billing\": {\n                            \"recurring\": \"2494\",\n                            \"unit\": \"Cents\",\n                            \"cycle\": \"Monthly\",\n                            \"currency\": \"CAN\"\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "The /store section of the API allows its user to programmatically do what the shopping website does.\n\nFor exemple it can be used to search for a desired configuration and follow the whole checkout process to buy that configuration."
		},
		{
			"name": "/INVOICES",
			"item": [
				{
					"name": "/invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/invoices",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"invoices"
							],
							"query": [
								{
									"key": "page",
									"value": "",
									"description": "(optional - default 1) The search result page to display.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "(optional - default 20, max 100) The number of results to display per page.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "(optional) The status of the invoices to be returned [Paid | Unpaid | Cancelled].",
									"disabled": true
								},
								{
									"key": "server_id",
									"value": "",
									"description": "(optional) The ID of the server",
									"disabled": true
								}
							]
						},
						"description": "Get a list of your invoices."
					},
					"response": [
						{
							"name": "/invoices",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/invoices",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"invoices"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"description": "(optional - default 1) The search result page to display.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"description": "(optional - default 20, max 100) The number of results to display per page.",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"description": "(optional) The status of the invoices to be returned [Paid | Unpaid | Cancelled].",
											"disabled": true
										},
										{
											"key": "server_id",
											"value": "",
											"description": "(optional) The ID of the server",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"2\",\n        \"total_number_of_entries\": \"2\",\n        \"invoices\": [\n            {\n                \"id\": \"1\",\n                \"status\": \"Unpaid\",\n                \"creation_date\": \"2022-11-18\",\n                \"due_date\": \"2022-12-02\",\n                \"paid_date\": \"0000-00-00\",\n                \"sub_total\": \"56.32\",\n                \"tax\": \"2.82\",\n                \"tax2\": \"5.62\",\n                \"credit\": \"0.00\",\n                \"balance\": \"64.76\",\n                \"items\": [\n                    {\n                        \"id\": \"1\",\n                        \"type\": \"Hosting\",\n                        \"relationship_id\": \"1\",\n                        \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #1\\nLocation: Los Angeles - US\\nCPU: Intel Xeon E3&#9472;1230 v2 - 3.3 GHz - 4 core(s)\\nRAM: 16GB - DDR3 [...]\",\n                        \"amount\": \"40.42\"\n                    },\n                    {\n                        \"id\": \"2\",\n                        \"type\": \"Hosting\",\n                        \"relationship_id\": \"2\",\n                        \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #2\\nLocation: Paris - FR\\nCPU: Intel Core i3&#9472;530 - 2.93 GHz - 2 core(s)\\nRAM: 4GB - DDR3 [...]\",\n                        \"amount\": \"15.90\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"2\",\n                \"status\": \"Unpaid\",\n                \"creation_date\": \"2022-10-07\",\n                \"due_date\": \"2022-10-10\",\n                \"paid_date\": \"0000-00-00\",\n                \"sub_total\": \"96.10\",\n                \"tax\": \"4.81\",\n                \"tax2\": \"9.59\",\n                \"credit\": \"0.00\",\n                \"balance\": \"110.50\",\n                \"items\": [\n                    {\n                        \"id\": \"3\",\n                        \"type\": \"Add-on\",\n                        \"relationship_id\": \"3\",\n                        \"description\": \"Add-on - DDoS protection: Preventive Protection - 51.159.211.130\\nSetup fee: 0.00$C \\nRecurring: 48.05$C (Monthly)\\nProrata: 96.10$C (2 months)\",\n                        \"amount\": \"96.10\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/invoices{{invoice_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/invoices/{{invoice_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"invoices",
								"{{invoice_id}}"
							]
						},
						"description": "Get a single invoice's content."
					},
					"response": [
						{
							"name": "/invoices{{invoice_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/invoices/{{invoice_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"invoices",
										"{{invoice_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"1\",\n        \"status\": \"Unpaid\",\n        \"creation_date\": \"2022-11-18\",\n        \"due_date\": \"2022-12-02\",\n        \"paid_date\": \"0000-00-00\",\n        \"sub_total\": \"56.32\",\n        \"tax\": \"2.82\",\n        \"tax2\": \"5.62\",\n        \"credit\": \"0.00\",\n        \"balance\": \"64.76\",\n        \"items\": [\n            {\n                \"id\": \"1\",\n                \"type\": \"Hosting\",\n                \"relationship_id\": \"1\",\n                \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #1\\nLocation: Los Angeles - US\\nCPU: Intel Xeon E3&#9472;1230 v2 - 3.3 GHz - 4 core(s)\\nRAM: 16GB - DDR3 [...]\",\n                \"amount\": \"40.42\"\n            },\n            {\n                \"id\": \"2\",\n                \"type\": \"Hosting\",\n                \"relationship_id\": \"2\",\n                \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #2\\nLocation: Paris - FR\\nCPU: Intel Core i3&#9472;530 - 2.93 GHz - 2 core(s)\\nRAM: 4GB - DDR3 [...]\",\n                \"amount\": \"15.90\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/invoices{{invoice_id}}/pay",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "",
									"description": "The amount of account funds to apply.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/invoices/{{invoice_id}}/pay",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"invoices",
								"{{invoice_id}}",
								"pay"
							]
						},
						"description": "Pay an invoice."
					},
					"response": [
						{
							"name": "/invoices{{invoice_id}}/pay",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "amount",
											"value": "0.10",
											"description": "The amount of account funds to apply.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/invoices/{{invoice_id}}/pay",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"invoices",
										"{{invoice_id}}",
										"pay"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"2\",\n        \"status\": \"Paid\",\n        \"creation_date\": \"2022-10-07\",\n        \"due_date\": \"2022-10-10\",\n        \"paid_date\": \"0000-00-00\",\n        \"sub_total\": \"96.10\",\n        \"tax\": \"4.81\",\n        \"tax2\": \"9.59\",\n        \"credit\": \"110.50\",\n        \"balance\": \"0\",\n        \"items\": [\n            {\n                \"id\": \"3\",\n                \"type\": \"Add-on\",\n                \"relationship_id\": \"3\",\n                \"description\": \"Add-on - DDoS protection: Preventive Protection - 51.159.211.130\\nSetup fee: 0.00$C \\nRecurring: 48.05$C (Monthly)\\nProrata: 96.10$C (2 months)\",\n                \"amount\": \"96.10\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/invoices{{invoice_id}}/split",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "invoice_1",
									"value": "",
									"description": "A comma-separated list of invoice items IDs.",
									"type": "text"
								},
								{
									"key": "invoice_2",
									"value": "",
									"description": "A comma-separated list of invoice items IDs.",
									"type": "text"
								},
								{
									"key": "invoice_3",
									"value": "",
									"description": "(optional) A comma-separated list of invoice item IDs.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "invoice_4",
									"value": "",
									"description": "(optional) A comma-separated list of invoice item IDs.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/invoices/{{invoice_id}}/split",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"invoices",
								"{{invoice_id}}",
								"split"
							]
						},
						"description": "Split an invoice into multiple invoices."
					},
					"response": [
						{
							"name": "/invoices{{invoice_id}}/split",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "invoice_1",
											"value": "1930594, 1930587",
											"description": "A comma-separated list of invoice items IDs.",
											"type": "text"
										},
										{
											"key": "invoice_2",
											"value": "1930600",
											"description": "A comma-separated list of invoice items IDs.",
											"type": "text"
										},
										{
											"key": "invoice_3",
											"value": "",
											"description": "(optional) A comma-separated list of invoice item IDs.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "invoice_4",
											"value": "",
											"description": "(optional) A comma-separated list of invoice item IDs.",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/invoices/{{invoice_id}}/split",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"invoices",
										"{{invoice_id}}",
										"split"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"current_page\": \"1\",\n        \"total_pages\": \"1\",\n        \"number_of_entries\": \"2\",\n        \"total_number_of_entries\": \"2\",\n        \"invoices\": [\n            {\n                \"id\": \"1\",\n                \"status\": \"Unpaid\",\n                \"creation_date\": \"2022-11-18\",\n                \"due_date\": \"2022-12-02\",\n                \"paid_date\": \"0000-00-00\",\n                \"sub_total\": \"56.32\",\n                \"tax\": \"2.82\",\n                \"tax2\": \"5.62\",\n                \"credit\": \"0.00\",\n                \"balance\": \"64.76\",\n                \"items\": [\n                    {\n                        \"id\": \"1\",\n                        \"type\": \"Hosting\",\n                        \"relationship_id\": \"1\",\n                        \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #1\\nLocation: Los Angeles - US\\nCPU: Intel Xeon E3&#9472;1230 v2 - 3.3 GHz - 4 core(s)\\nRAM: 16GB - DDR3 [...]\",\n                        \"amount\": \"40.42\"\n                    },\n                    {\n                        \"id\": \"2\",\n                        \"type\": \"Hosting\",\n                        \"relationship_id\": \"2\",\n                        \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #2\\nLocation: Paris - FR\\nCPU: Intel Core i3&#9472;530 - 2.93 GHz - 2 core(s)\\nRAM: 4GB - DDR3 [...]\",\n                        \"amount\": \"15.90\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"2\",\n                \"status\": \"Unpaid\",\n                \"creation_date\": \"2022-10-07\",\n                \"due_date\": \"2022-10-10\",\n                \"paid_date\": \"0000-00-00\",\n                \"sub_total\": \"56.32\",\n                \"tax\": \"2.82\",\n                \"tax2\": \"5.62\",\n                \"credit\": \"0.00\",\n                \"balance\": \"64.76\",\n                \"items\": [\n                    {\n                        \"id\": \"5\",\n                        \"type\": \"Hosting\",\n                        \"relationship_id\": \"3\",\n                        \"description\": \"Dedicated Server (18/11/2022 - 18/12/2022)\\nService #1\\nLocation: Los Angeles - US\\nCPU: Intel Xeon E3&#9472;1230 v2 - 3.3 GHz - 4 core(s)\\nRAM: 32GB - DDR3 [...]\",\n                        \"amount\": \"56.32\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "The /invoices section of the API allows its user to programmatically do what the client panel does.\n\nFor exemple it can be used to search for unpaid invoices and pay them all one after the other."
		},
		{
			"name": "/ACCOUNT",
			"item": [
				{
					"name": "/account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/account",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"account"
							]
						},
						"description": "Get your account information."
					},
					"response": [
						{
							"name": "/account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/account",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"account"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"account\": {\n            \"email\": \"john.doe@example.com\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"company_name\": \"\",\n            \"country\": \"CA\",\n            \"state\": \"Quebec\",\n            \"city\": \"Montreal\",\n            \"zip_code\": \"A1B2C3\",\n            \"address\": \"123 test\",\n            \"phone\": \"1111111111\",\n            \"language\": \"EN\",\n            \"vat_number\": \"\",\n            \"maintenance_email\": \"\",\n            \"abuse_email\": \"\",\n            \"overage_email\": \"\",\n            \"currency_code\": \"USD\",\n            \"credit_balance\": \"0.00\"\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "The /account section allow user to fetch their account information."
		},
		{
			"name": "/SUPPORT",
			"item": [
				{
					"name": "/support/tickets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/support/tickets",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets"
							]
						},
						"description": "Get a list of all your open/unread support tickets."
					},
					"response": [
						{
							"name": "/support/tickets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_URL}}/support/tickets",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"tickets\": [\n            {\n                \"id\": \"000000\",\n                \"creation_date\": \"2019-01-01 00:00:00\",\n                \"category_name\": \"Technical Support\",\n                \"author\": \"John Doe\",\n                \"subject\": \"Hardware failure | HDD Failure | Montreal - CA | 8.8.8.8\",\n                \"message\": \"Test\",\n                \"status\": \"Open\",\n                \"nb_replies\": 0,\n                \"last_reply_date\": \"\",\n                \"last_reply_name\": \"\",\n                \"is_unread\": \"false\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/support/tickets/{{ticket_id}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/support/tickets/{{ticket_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets",
								"{{ticket_id}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get a single support ticket's content and mark it as read."
					},
					"response": [
						{
							"name": "/support/tickets/{{ticket_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/support/tickets/{{ticket_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets",
										"{{ticket_id}}"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"000000\",\n        \"date\": \"2019-01-01 00:00:00\",\n        \"subject\": \"VIP Hardware failure | HDD Failure | Paris - FR | 1.1.1.1\",\n        \"message\": \"Test message\",\n        \"status\": \"Open\",\n        \"category_name\": \"VIP Support\",\n        \"department\": {\n            \"id\": \"16\",\n            \"name\": \"Hardware failure\"\n        },\n        \"sub_department\": {\n            \"id\": \"7\",\n            \"name\": \"HDD Failure\"\n        },\n        \"server\": {\n            \"id\": \"000000\",\n            \"ip\": \"1.1.1.1\",\n            \"hostname\": \"test.api.com\",\n            \"status\": \"Active\"\n        },\n        \"additional_servers\": [],\n        \"replies\": [\n            {\n                \"author\": \"John Doe\",\n                \"date\": \"2019-01-01 00:00:00\",\n                \"message\": \"Test message\",\n                \"attachments\": [\n                    \"test.png\"\n                ],\n                \"is_oneprovider_reply\": \"false\"\n            }\n        ],\n        \"cc\": [\n            {\n                \"user_id\": \"0000\",\n                \"first_name\": \"Jane\",\n                \"last_name\": \"Doe\",\n                \"email\": \"janeDoe@realEmail.com\"\n            }\n        ],\n        \"pre_authorizations\": []\n    }\n}"
						}
					]
				},
				{
					"name": "/support/tickets/departments",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/support/tickets/departments",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets",
								"departments"
							]
						},
						"description": "Get a list of all support departments and sub-departments."
					},
					"response": [
						{
							"name": "/support/tickets/departments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/support/tickets/departments",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets",
										"departments"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"departments\": [\n            {\n                \"id\": \"16\",\n                \"name\": \"Hardware failure\",\n                \"is_server_required\": \"true\",\n                \"sub_departments\": [\n                    {\n                        \"id\": \"7\",\n                        \"name\": \"HDD Failure\"\n                    },\n                    {\n                        \"id\": \"8\",\n                        \"name\": \"RAM failure\"\n                    },\n                    {\n                        \"id\": \"9\",\n                        \"name\": \"Other\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "/support/tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}} ",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "server_id",
									"value": "{{server_id}}",
									"description": "The \tserver ID",
									"type": "text"
								},
								{
									"key": "department",
									"value": "",
									"description": "The ticket's department ID obtained with the /ticket/departments call.",
									"type": "text"
								},
								{
									"key": "sub_department",
									"value": "",
									"description": "The tIcket's sub-department ID obtained with the /ticket/departments call.",
									"type": "text"
								},
								{
									"key": "additional_server_id[0]",
									"value": "",
									"description": "The additional servers' ID as an array",
									"type": "text",
									"disabled": true
								},
								{
									"key": "additional_server_id[1]",
									"value": "",
									"description": "The additional servers' ID as an array",
									"type": "text",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "",
									"description": "The ticket subject (Mandatory if the ticket’s department does not require a server to be listed)",
									"type": "text"
								},
								{
									"key": "message",
									"value": "",
									"description": "The ticket message.",
									"type": "text"
								},
								{
									"key": "carbon_copy[0]",
									"value": "",
									"description": "List of emails to send CC to [Optional | Sub-users only]",
									"type": "text",
									"disabled": true
								},
								{
									"key": "carbon_copy[1]",
									"value": "",
									"description": "List of emails to send CC to [Optional | Sub-users only]",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/support/tickets",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets"
							]
						},
						"description": "Open a new support ticket."
					},
					"response": [
						{
							"name": "/support/tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}} ",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "server_id",
											"value": "{{server_id}}",
											"description": "The \tserver ID",
											"type": "text"
										},
										{
											"key": "department",
											"value": "16",
											"description": "The ticket's department ID obtained with the /ticket/departments call.",
											"type": "text"
										},
										{
											"key": "sub_department",
											"value": "7",
											"description": "The tIcket's sub-department ID obtained with the /ticket/departments call.",
											"type": "text"
										},
										{
											"key": "additional_server_id[0]",
											"value": "",
											"description": "The additional servers' ID as an array",
											"type": "text",
											"disabled": true
										},
										{
											"key": "additional_server_id[1]",
											"value": "",
											"description": "The additional servers' ID as an array",
											"type": "text",
											"disabled": true
										},
										{
											"key": "subject",
											"value": "Testing",
											"description": "The ticket subject (Mandatory if the ticket’s department does not require a server to be listed)",
											"type": "text"
										},
										{
											"key": "message",
											"value": "This is a test.",
											"description": "The ticket message.",
											"type": "text"
										},
										{
											"key": "carbon_copy[0]",
											"value": "",
											"description": "List of emails to send CC to [Optional | Sub-users only]",
											"type": "text",
											"disabled": true
										},
										{
											"key": "carbon_copy[1]",
											"value": "",
											"description": "List of emails to send CC to [Optional | Sub-users only]",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/support/tickets",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"160397\"\n    }\n}"
						}
					]
				},
				{
					"name": "/support/tickets/{{ticket_id}}/reopen",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/support/tickets/{{ticket_id}}/reopen",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets",
								"{{ticket_id}}",
								"reopen"
							]
						},
						"description": "Reopen a closed support ticket."
					},
					"response": [
						{
							"name": "/support/tickets/{{ticket_id}}/reopen",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/support/tickets/{{ticket_id}}/reopen",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets",
										"{{ticket_id}}",
										"reopen"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {}\n}"
						}
					]
				},
				{
					"name": "/support/tickets/{{ticket_id}}/close",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/support/tickets/{{ticket_id}}/close",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets",
								"{{ticket_id}}",
								"close"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Close an open support ticket."
					},
					"response": [
						{
							"name": "/support/tickets/{{ticket_id}}/close",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/support/tickets/{{ticket_id}}/close",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets",
										"{{ticket_id}}",
										"close"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {}\n}"
						}
					]
				},
				{
					"name": "/support/tickets/{{ticket_id}}/reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}",
								"type": "text"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "message",
									"value": "This is a test reply.",
									"description": "The ticket reply message.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/support/tickets/{{ticket_id}}/reply",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"support",
								"tickets",
								"{{ticket_id}}",
								"reply"
							]
						},
						"description": "Add a reply to a support ticket."
					},
					"response": [
						{
							"name": "/support/tickets/{{ticket_id}}/reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}",
										"type": "text"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "message",
											"value": "This is a test reply.",
											"description": "The ticket reply message.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/support/tickets/{{ticket_id}}/reply",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"support",
										"tickets",
										"{{ticket_id}}",
										"reply"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {}\n}"
						}
					]
				}
			],
			"description": "The /support section of the API allows its user to programmatically do what the client panel does.\n\nFor exemple it can be used to open a new ticket or/and reply to one already existing.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "/TAG",
			"item": [
				{
					"name": "/tag/listing{{project_uuid}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/tag/listing/{{project_uuid}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"listing",
								"{{project_uuid}}"
							]
						},
						"description": "Get a list of tags."
					},
					"response": [
						{
							"name": "/tag/listing{{project_uuid}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/tag/listing/{{project_uuid}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"listing",
										"{{project_uuid}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": [\n        {\n            \"id\": \"1\",\n            \"label\": \"Test\",\n            \"description\": \"A test tag\",\n            \"project_uuid\": \"00f000f0-00f0-00f0-ff00-0fff00000f00\",\n            \"assignees\": [],\n            \"created_on\": \"2024-06-05 10:08:01\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/tag/{{tag_id}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{API_URL}}/tag/{{tag_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"{{tag_id}}"
							]
						},
						"description": "Get a tag detailed information."
					},
					"response": [
						{
							"name": "/tag/{{tag_id}}",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{API_URL}}/tag/{{tag_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"{{tag_id}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"1\",\n        \"label\": \"Test\",\n        \"description\": \"A test tag\",\n        \"project_uuid\": \"0\",\n        \"assignees\": [],\n        \"created_on\": \"2024-06-04 11:08:42\"\n    }\n}"
						}
					]
				},
				{
					"name": "/tag/add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "label",
									"value": "",
									"description": "The name of the tag",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "The description of the tag",
									"type": "text",
									"disabled": true
								},
								{
									"key": "project_uuid",
									"value": "",
									"description": "The project UUID of the tag, leave empty to have it available account wide.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/tag/add/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"add",
								""
							]
						},
						"description": "Create a new tag."
					},
					"response": [
						{
							"name": "/tag/add",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "label",
											"value": "Testing",
											"description": "The name of the tag",
											"type": "text"
										},
										{
											"key": "description",
											"value": "This is a test tag.",
											"description": "The description of the tag",
											"type": "text",
											"disabled": true
										},
										{
											"key": "project_uuid",
											"value": "{{project_uuid}}",
											"description": "The project UUID of the tag, leave empty to have it available account wide.",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/tag/add/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"add",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"1\",\n        \"label\": \"Testing\",\n        \"description\": \"This is a test tag.\",\n        \"project_uuid\": \"0\",\n        \"assignees\": [],\n        \"created_on\": \"2024-06-04 11:08:42\"\n    }\n}"
						}
					]
				},
				{
					"name": "/tag/edit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tag_id",
									"value": "{{tag_id}}",
									"description": "The tag ID.",
									"type": "text"
								},
								{
									"key": "label",
									"value": "",
									"description": "The name of the tag.",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "The description of the tag.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/tag/edit/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"edit",
								""
							]
						},
						"description": "Edit a tag information."
					},
					"response": [
						{
							"name": "/tag/edit",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tag_id",
											"value": "{{tag_id}}",
											"description": "The tag ID.",
											"type": "text"
										},
										{
											"key": "label",
											"value": "Test",
											"description": "The name of the tag.",
											"type": "text"
										},
										{
											"key": "description",
											"value": "This is a test.",
											"description": "The description of the tag.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/tag/edit/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"edit",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"1\",\n        \"label\": \"Test\",\n        \"description\": \"This is a test.\",\n        \"project_uuid\": \"00f000f0-00f0-00f0-ff00-0fff00000f00\",\n        \"assignees\": [],\n        \"created_on\": \"2024-06-04 11:08:42\"\n    }\n}"
						}
					]
				},
				{
					"name": "/tag/assign",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tag_id",
									"value": "",
									"description": "The tag ID.",
									"type": "text"
								},
								{
									"key": "service_id",
									"value": "",
									"description": "The ID of the server/VM.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/tag/assign/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"assign",
								""
							]
						},
						"description": "Assign a tag to a service."
					},
					"response": [
						{
							"name": "/tag/assign",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tag_id",
											"value": "1",
											"description": "The tag ID.",
											"type": "text"
										},
										{
											"key": "service_id",
											"value": "2",
											"description": "The ID of the server/VM.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/tag/assign/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"assign",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"1\",\n        \"label\": \"Test\",\n        \"description\": \"A test tag\",\n        \"project_uuid\": \"00f000f0-00f0-00f0-ff00-0fff00000f00\",\n        \"assignees\": [\n            \"2\"\n        ],\n        \"created_on\": \"2024-06-04 11:08:42\"\n    }\n}"
						}
					]
				},
				{
					"name": "/tag/unassign",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tag_id",
									"value": "",
									"description": "The tag ID.",
									"type": "text"
								},
								{
									"key": "service_id",
									"value": "",
									"description": "The ID of the server/VM.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/tag/unassign/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"unassign",
								""
							]
						},
						"description": "Unassign a tag from a service."
					},
					"response": [
						{
							"name": "/tag/unassign",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tag_id",
											"value": "1",
											"description": "The tag ID.",
											"type": "text"
										},
										{
											"key": "service_id",
											"value": "2",
											"description": "The ID of the server/VM.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/tag/unassign/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"unassign",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {\n        \"id\": \"1\",\n        \"label\": \"Test\",\n        \"description\": \"A test tag\",\n        \"project_uuid\": \"00f000f0-00f0-00f0-ff00-0fff00000f00\",\n        \"assignees\": [\n            \"1\",\n            \"2\"\n        ],\n        \"created_on\": \"2024-06-04 11:08:42\"\n    }\n}"
						}
					]
				},
				{
					"name": "/tag/remove",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Client-Key",
								"value": "{{CLIENT_KEY}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tag_id",
									"value": "1",
									"description": "The tag ID.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/tag/remove/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"tag",
								"remove",
								""
							]
						},
						"description": "Delete a tag and all its assignations."
					},
					"response": [
						{
							"name": "/tag/remove",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Api-Key",
										"value": "{{API_KEY}}"
									},
									{
										"key": "Client-Key",
										"value": "{{CLIENT_KEY}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tag_id",
											"value": "1",
											"description": "The tag ID.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/tag/remove/",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"tag",
										"remove",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"success\",\n    \"response\": {}\n}"
						}
					]
				}
			],
			"description": "The /tag section of the API allows its user to programmatically do what the client panel does.\n\nFor exemple it can be used to create and assign tag to server/vm part of the same project."
		},
		{
			"name": "/ABUSES",
			"item": [
				{
					"name": "/abuses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/abuses",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"abuses"
							],
							"query": [
								{
									"key": "uuid",
									"value": "",
									"disabled": true
								},
								{
									"key": "page",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get a list of abuses."
					},
					"response": []
				},
				{
					"name": "/abuses/server_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/abuses/{{server_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"abuses",
								"{{server_id}}"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "limit",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Get a list of abuses for the server."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "API_URL",
			"value": "https://api.oneprovider.com"
		},
		{
			"key": "API_KEY",
			"value": "API_"
		},
		{
			"key": "CLIENT_KEY",
			"value": "CK_"
		},
		{
			"key": "server_id",
			"value": ""
		},
		{
			"key": "vm_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "ticket_id",
			"value": ""
		},
		{
			"key": "config_id",
			"value": ""
		},
		{
			"key": "cart_id",
			"value": ""
		},
		{
			"key": "order_id",
			"value": ""
		},
		{
			"key": "invoice_id",
			"value": ""
		},
		{
			"key": "tag_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "project_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "project_uud",
			"value": "",
			"type": "string"
		}
	]
}